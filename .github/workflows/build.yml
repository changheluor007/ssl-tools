name: Build

on:
  push

jobs:
  Build:
    name: build - ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
          - goarch: arm64
            goos: windows
          - goarch: arm64
            goos: windows
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Private Actions Checkout
        uses: actions/checkout@v2
      -
        name: Init Bin
        uses: actions/setup-go@v2
        with:
          go-version: '1.9.3'
      - run: |
          mkdir bin
          CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o bin/sslt_$GOOS_$GOARCH sslt.go
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

  release:
    needs: Build
    name: release
    runs-on: ubuntu-latest
    steps:
      - uses: dev-drprasad/delete-older-releases@v0.2.0
        with:
          repo: XRSec/ssl-tools
          keep_latest: 3
          delete_tag_pattern: ""
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
      - name: Get version
        id: time_now
        run: echo "::set-output name=dir::$(date +%Y-%m-%d)"
      -
        name: release
        uses: softprops/action-gh-release@v1
        with:
          files: "bin/**"
          body_path: ".github/body.txt"
          tag_name: Use pure go language development @${{ steps.time_now.outputs.dir }}
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}